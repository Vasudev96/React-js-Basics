{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","_ref","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","marginTop","children","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","e","setState","searchField","target","value","state","_this2","fetch","then","response","json","users","_this$state","filterRobots","filter","robot","toLowerCase","includes","toLocaleLowerCase","length","Fragment","components_SearchBox","components_Scroll","components_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.6b5d35bf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => {\r\n    const {name, email, id} = props;\r\n  return (\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow col'>\r\n        <img src={`https://robohash.org/${id}?200*200`} alt='robots' />\r\n        <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    // const cardComponent = robots.map((user, i) => {\r\n    //     return <Card \r\n    //     key={i} \r\n    //     id={robots[i].id} \r\n    //     name={robots[i].name} \r\n    //     email={robots[i].email} />\r\n    \r\n    // })\r\n  return (\r\n    <div className='row'>\r\n{robots.map((user, i) => {\r\n        return <Card \r\n        key={i} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email} />\r\n   \r\n    })}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <input \r\n    className='pa3 ba b--green bg-lightest-blue'\r\n    type='search' \r\n    placeholder='search robots'\r\n    onChange={searchChange} />\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{\"overflowY\":\"scroll\", \"border\":\"2px solid black\", \"height\":\"500px\", \"marginTop\":'20px' }}>\r\n        <div className='container'>\r\n        {props.children}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from \"react\"\nimport \"./App.css\"\nimport CardList from \"./components/CardList\"\nimport SearchBox from \"./components/SearchBox\"\nimport Scroll from \"./components/Scroll\"\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchField: \"\",\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }))\n  }\n\n  onSearchChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n  render() {\n    const { robots, searchField } = this.state;\n    const filterRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    })\n    return !robots.length ? (\n      <h1>Loading...</h1>\n    ) : (\n      <>\n        <div className=\"container\">\n          <div className=\"tc\">\n            <h1 className=\"text-white\">Robot Test</h1>\n            <SearchBox searchChange={this.onSearchChange} />\n            <Scroll>\n              <CardList robots={filterRobots} />\n            </Scroll>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}